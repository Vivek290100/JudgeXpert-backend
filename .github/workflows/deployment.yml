name: Build and Deploy Judgexpert

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: judgexpert-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint:deploy

      - name: Run Unit Tests
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Save EC2 PEM file
        run: |
          echo "${{ secrets.EC2_ACCESS_PEM }}" > judgexpertpem.pem
          chmod 400 judgexpertpem.pem

      - name: SSH and Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i judgexpertpem.pem ${{ secrets.EC2_ACCESS_SSH_COMMAND }} <<EOF
            echo "${{ secrets.APPLICATION_ENV }}" | sudo tee .env > /dev/null

            sudo docker stop judgexpert-container || true
            sudo docker rm judgexpert-container || true

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

            sudo docker run -d \
              --name judgexpert-container \
              --env-file .env \
              -p 3000:3000 \
              ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          EOF
